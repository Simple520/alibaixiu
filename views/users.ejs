<% include layout/header %>
<div class="main">
  <% include layout/nav %>
  <div class="container-fluid">
    <div class="page-title">
      <h1>用户</h1>
    </div>
    <!-- 有错误信息时展示 -->
    <!-- <div class="alert alert-danger">
        <strong>错误！</strong>发生XXX错误
      </div> -->
    <div class="row">
      <div class="col-md-4">
        <form id='form'>
          <h2>添加新用户</h2>
          <div class="form-group">
            <label for="email">邮箱</label>
            <input id="email" class="form-control" name="email" type="email" placeholder="邮箱">
          </div>
          <div class="form-group">
            <label for="slug">别名</label>
            <input id="slug" class="form-control" name="slug" type="text" placeholder="slug">
            <p class="help-block">https://zce.me/author/<strong>slug</strong></p>
          </div>
          <div class="form-group">
            <label for="nickname">昵称</label>
            <input id="nickname" class="form-control" name="nickname" type="text" placeholder="昵称">
          </div>
          <div class="form-group">
            <label for="password">密码</label>
            <input id="password" class="form-control" name="password" type="password" placeholder="密码">
          </div>
          <div class="form-group">
            <button class="btn btn-primary" type="submit">添加</button>
          </div>
        </form>
      </div>
      <div class="col-md-8">
        <div class="page-action">
          <!-- show when multiple checked -->
          <a class="btn btn-danger btn-sm" href="javascript:;" style="display: none" id='delAllbtn'>批量删除</a>
        </div>
        <form id='tableForm'>
          <table class="table table-striped table-bordered table-hover">
            <thead>
              <tr>
                <th class="text-center" width="40"><input type="checkbox" id='checkAll'></th>
                <th class="text-center" width="80">头像</th>
                <th>邮箱</th>
                <th>别名</th>
                <th>昵称</th>
                <th>状态</th>
                <th class="text-center" width="100">操作</th>
              </tr>
            </thead>
            <tbody id='tbody'>

              <!-- <% for(var i = 0; i < result.length; i ++) { %>
            <tr>
              <td class="text-center"><input type="checkbox" class='checkItems'></td>
              <td class="text-center"><img class="avatar"
                  src="<%= result[i].avatar?result[i].avatar:'/static/uploads/avatar.jpg' %>"></td>
              <td><%= result[i].email %></td>
              <td><%= result[i].slug %></td>
              <td><%= result[i].nickname %></td>
              <td>激活</td>
              <td class="text-center">
                <a href="javascript:void(0);" class="btn btn-default btn-xs" id='<%= result[i].id %>'>编辑</a>
                <a href="javascript:;" id='<%= result[i].id %>' class="btn btn-danger btn-xs">删除</a>
              </td>
            </tr>
            <% } %> -->
              <% for(var i = 0; i < result.length; i ++) { %>
              <tr>
                <td class="text-center"><input type="checkbox" class='checkItems' name='id' value='<%= result[i].id %>'>
                </td>
                <td class="text-center"><img class="avatar"
                    src="<%= result[i].avatar?result[i].avatar:'/static/uploads/avatar.jpg' %>"></td>
                <td><%= result[i].email %></td>
                <td><%= result[i].slug %></td>
                <td><%= result[i].nickname %></td>
                <td>激活</td>
                <td class="text-center">
                  <a href="javascript:void(0);" class="btn btn-default btn-xs" id='<%= result[i].id %>'>编辑</a>
                  <a href="javascript:;" id='<%= result[i].id %>' class="btn btn-danger btn-xs">删除</a>
                </td>
              </tr>
              <% } %>
            </tbody>
          </table>
        </form>
      </div>
    </div>
  </div>
</div>
<% include layout/aside %>
<% include layout/footer %>
<!-- 新增用户 -->
<script id='tmp' type="text/html">
  <!-- art-template模板渲染页面 -->
  {{each data}}
<tr>
  <td class="text-center"><input type="checkbox" class='checkItems' name='id' value='{{$value.id}}'></td>
  <td class="text-center"><img class="avatar" src="{{$value.avatar?$value.avatar:'/static/uploads/avatar.jpg'}}"></td>
  <td>{{$value.email}}</td>
  <td>{{$value.slug}}</td>
  <td>{{$value.nickname}}</td>
  <td>激活</td>
  <td class="text-center">
    <a href="javascript:;" class="btn btn-default btn-xs" id={{$value.id}}>编辑</a>
    <a href="javascript:;" id={{$value.id}} class="btn btn-danger btn-xs">删除</a>
  </td>
</tr>
{{/each}}
</script>

<!-- 修改用户 -->
<script id='editUser' type="text/html">
  <h2>修改用户</h2>
  <!--添加一个隐藏域 -->
  <input type="hidden" name="id" value='{{id}}'>
  <div class="form-group">
    <label for="email">邮箱</label>
    <input id="email" class="form-control" name="email" type="email" placeholder="邮箱" value='{{email}}'>
  </div>
  <div class="form-group">
    <label for="nickname">昵称</label>
    <input id="nickname" class="form-control" name="nickname" type="text" placeholder="昵称" value='{{nickname}}'>
  </div>
  <div class="form-group">
    <label for="password">密码</label>
    <input id="password" class="form-control" name="password" type="password" placeholder="密码" value='{{password}}'>
  </div>
  <div class="form-group">
    <!-- <button class="btn btn-primary" type="submit">修改</button> -->
    <button class="btn btn-primary" id='editbtn'>修改</button>

  </div>
</script>

<!-- 修改数据后重新用模板渲染到 新增用户的内容-->
<script id='addUser' type="text/html">
  <h2>添加新用户</h2>
  <div class="form-group">
    <label for="email">邮箱</label>
    <input id="email" class="form-control" name="email" type="email" placeholder="邮箱">
  </div>
  <div class="form-group">
    <label for="slug">别名</label>
    <input id="slug" class="form-control" name="slug" type="text" placeholder="slug">
    <p class="help-block">https://zce.me/author/<strong>slug</strong></p>
  </div>
  <div class="form-group">
    <label for="nickname">昵称</label>
    <input id="nickname" class="form-control" name="nickname" type="text" placeholder="昵称">
  </div>
  <div class="form-group">
    <label for="password">密码</label>
    <input id="password" class="form-control" name="password" type="password" placeholder="密码">
  </div>
  <div class="form-group">
    <button class="btn btn-primary" type="submit">添加</button>
  </div>
</script>

<script>
  //1.0给按钮注册事件
  $('#form').on('click', 'button[type="submit"]', function (event) {
    //1.0阻止默认行为
    event.preventDefault()
    //2.0 使用serialize接收参数
    var params = $('#form').serialize()
    // console.log(params)
    //jquery 中遍历： 如果表单项中有数据未填写，则不会执行下面的代码

    // let obj=$('.form-group>input').val()
    // console.log(obj)
    // return false

    //  //遍历input中的值
    //  $('#form ')

    //3.0提交数据
    $.ajax({
      url: '/addUser',
      method: 'POST',
      data: params,
      dataType: 'JSON',
      success: res => {

        //console.log(res)
        //清空
        $('#email').val('')
        $('#slug').val('')
        $('#nickname').val('')
        $('#password').val('')
        //逻辑处理
        let {
          status,
          msg
        } = res //解构赋值

        if (status === 200) {
          alert(msg)
          //重新渲染数据
          getAllUsers()
        } else if (status === 304) {
          alert(msg)
          window.location='/login'
        } else {
          alert(msg)
          getAllUsers()
        }
      }
    })

  })

  //封装一 个用来渲染用户列表数据的函数
  function getAllUsers() {
    $.ajax({
      url: '/getAllUsers',
      method: 'GET',
      dataType: 'JSON',
      success: res => {
        //解构对象
        // console.log(res)
        let {
          status,
          msg,
          data
        } = res
        if (status === 200) {
          //重新渲染页面
          let thtml = template('tmp', res)
          $('#tbody').html(thtml)
          //方法一： 用于解决点触发按钮事件失效
          // bindEditHandler()
        } else if(status === 304) {
          alert(msg)
          window.location='/login'
        }
      }
    })
  }


  //给删除点击按钮注册点击事件： (事件委托)
  $('#tbody').on('click', '.btn-danger', function () {
    //获取当前被点击元素的id
    let id = $(this).attr('id')
    if (confirm('确认删除')) {
      //异步发送请求
      $.ajax({
        url: '/delUser?id=' + id,
        method: 'GET',
        dataType: 'JSON',
        success: res => {
          //解构赋值
          let {
            status,
            msg
          } = res
          if (status === 200) {
            alert(msg)
            //重新渲染页面
            getAllUsers()
          } else if (status === 304) {
          alert(msg)
          window.location='/login'
        }else {
            alert('删除失败')
          }
        }
      })
    }
  })

  //编辑按钮绑定点击事件
  //注意的问题： 异步请求后 art-template 重新渲染的页面，原本首次请求服务器端响应的数据被替换 ，后面被替换的数据内有该注册的点击事件
  // $('.btn-default').on('click',function(event){
  //   //阻止默认行为
  //   event.preventDefault()
  //   alert('首次请求可出发')
  // })

  // 方法一： 
  // function bindEditHandler(){
  //    $('.btn-default').on('click',function(event){
  //     //阻止默认行为
  //     event.preventDefault()
  //     alert('i am edit')
  //   })
  // }
  // bindEditHandler()


  //方法二： 事件委托
  $('#tbody').on('click', '.btn-default', function () {
    event.preventDefault()
    // alert('i am edit btn')
    // 1.0 获取id 

    let id = $(this).attr('id')
    // alert(id)
    //2.0 点击编辑按钮发送携带id的异步请求
    $.ajax({
      url: '/getIdData',
      type: 'GET',
      data: 'id=' + id,
      success: res => {
        //解构赋值
        let {
          status,
          msg,
          data
        } = res
        if (status === 200) {
          //将数据渲染到表单中
          //将新增用户改为修改用户
          let html = template('editUser', data)
          $('#form').html(html)
        }else if (status === 304) {
          alert(msg)
          window.location='/login'
        }
      }
    })

  })

  //点击修改按钮绑定事件： 通过事件委托
  $('#form').on('click', '#editbtn', function (event) {
    event.preventDefault()
    //  alert(' 我被点击啦')
    //获取表单中的数据
    let params = $('#form').serialize()
    console.log(params)
    //发送异步请求
    $.ajax({
      url: '/editPost',
      type: 'POST',
      data: params,
      success: res => {
        //解构赋值
        let {
          status,
          msg
        } = res
        status == 200 ? alert(msg) : alert('出错啦')
        //从新渲染页面
        getAllUsers()
        //将修改内容重新渲染
        let html = template('addUser', {})
        $('#form').html(html)
      }
    })
  })

  //批量删除

  //给表头中的单选框绑定一个事件
  //得到表头中的单选框状态
  //将下方所有的单选框设置为checked状态
  //在jquery中checked selected disable 只能用prop('checked')的方式获取

  //jquery 中的size()的作用 等价于 length

  // id='checkAll'
  //全选与全不选
  $('#checkAll').on('click', function () {
    // if ($(this).prop('checked')) {
    //   //下面所有的都被选中
    //   $('.checkItems').prop('checked', true)
    // } else {
    //   $('.checkItems').prop('checked', false)
    // }

    //判断checkAll的选中状态
    let checked = $(this).prop('checked')
    //将选中状态赋值给所有的 checkItems 
    $('.checkItems').prop('checked', checked)
    //如果全选，显示批量删除按钮，否则隐藏批量删除按钮
    checked ? $('#delAllbtn').show() : $('#delAllbtn').hide()
  })

  //下方选择框触发事件

  $('#tbody').on('click', '.checkItems', function () {
    //获取被选中的选择框的个数
    let selCount = $('#tbody input[type="checkbox"]:checked').length
    // $('.checkItems').each((key, ele) => {
    //   //console.log(key + '=======' + ele)
    //   // ele 为每一个元素
    //   let result = $(ele).prop('checked')
    //   if (result) {
    //     selCount++
    //   }
    // })
    
    //console.log(selCount)
    //如果选中个数大于2则显示批量删除,否则隐藏批量删除按钮
    selCount >= 2 ? $('#delAllbtn').show() : $('#delAllbtn').hide()
    //如果下方多选框中全部被选中,着表头中的多选框中也要被选中
    let allCount = $('.checkItems').size()
    selCount === allCount ? $('#checkAll').prop('checked', true) : $('#checkAll').prop('checked', false)
  })

  //给批量按钮注册点击事件
  //这里拥有的技术点：给多选框中绑定id属性 以及 name value 属性 以 form 表单提交的方式（POST） 来提交多个相同参数名的数据
  //                表单外的按钮触发表单的提交事件
  // 注意点：  form 表单需放在table 外面

  $('#delAllbtn').on('click', function (event) {
    //获取参数
    let params = $('#tableForm').serialize()
    console.log(params)
    //发送异步请求
    $.ajax({
      url: '/delUsers',
      type: 'POST',
      data: params,
      success: res => {
        //解构赋值
        let {
          status,
          msg
        } = res
        if (status === 200) {
          alert(msg)
          //重新渲染页面
          getAllUsers()
        }else if (status === 304) {
          alert(msg)
          window.location='/login'
        }else {
          alert(msg)
        }
      }
    })
  })
</script>


<!-- 
 -->